{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Dashboard.js","components/Algorithm/projectBoardAlgorithm.js","securityUtils/setToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/Algorithm/projectTasksBoardAlgorithm.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/SignUp.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","style","color","onClick","bind","Component","connect","window","confirm","delete","DashBoard","getProjects","boardContent","projects","length","role","map","key","projectBoardAlgorithm","state","get","res","setToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","guestUser","userIsAuthenticated","fullName","data-toggler","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","startDate","endDate","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","disabled","ProjectTask","backlog_id","pt_sequence","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","projectNotFound","projectTaskBoardAlgorithm","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","createdAt","getProjectTask","updateProjectTask","patch","Landing","SignUp","newUser","username","password","confirmPassword","createNewUser","Login","LoginRequest","loginUser","setItem","decodedToken","jwt_decode","component","otherProps","render","getItem","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.42d75b63.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction CreateProjectButton() {\r\n    return (    \r\n        <React.Fragment>  \r\n            <Link\r\n                to=\"/addProject\"\r\n                className=\"btn btn-lg btn-outline-info\"\r\n            >\r\n                Create a Project\r\n            </Link>\r\n        </React.Fragment>  \r\n    )\r\n}\r\n\r\nexport default CreateProjectButton","import axios from 'axios';\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types';\r\n\r\nexport const createProject = (project, history) => async dispatch =>{\r\n    try{\r\n        await axios.post(\"/api/project\", project)\r\n        history.push(\"/dashboard\")\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:{}\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n} \r\n\r\nexport const getProjects = () => async dispatch =>{\r\n    const res = await axios.get(\"/api/project/all\")\r\n    dispatch({\r\n        type:GET_PROJECTS,\r\n        payload:res.data\r\n    })\r\n}  \r\n\r\nexport const getProject = (id, history) => async dispatch =>{\r\n    try {\r\n        const res = await axios.get(`/api/project/${id}`)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        history.push(\"/dashboard\")\r\n    }\r\n    \r\n}\r\n\r\nexport const deleteProject = id => async dispatch =>{\r\n    if (\r\n        window.confirm(\r\n            \"Are you sure? This will delete the project and all data related to it\"\r\n        )\r\n    ) {\r\n        await axios.delete(`/api/project/${id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        }) \r\n    }\r\n    \r\n    \r\n}","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\"; \r\n\r\n// types for backlog actions\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n\r\n// types for security actions\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteProject } from '../../actions/projectActions';\r\n\r\nclass ProjectItem extends Component{\r\n    onDeleteClick = id =>{\r\n        this.props.deleteProject(id);\r\n    }\r\n    render(){\r\n        const { project } = this.props\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                            <h3>{project.projectName}</h3>\r\n                            <p>{project.description}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\" style={{ color: \"green\" }}>  Project Board\r\n                                        </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item\">\r\n                                        <i className=\"fa fa-edit pr-1\">  Update Project Info</i>\r\n                                    </li>\r\n                                </Link>\r\n                                <li className=\"list-group-item\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\" style={{ color: \"red\" }}>  Delete Project</i>\r\n                                </li> \r\n                             </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    {deleteProject}\r\n    )(ProjectItem); ","import React, {Component} from 'react';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from 'react-redux';\r\nimport { getProjects } from '../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\nimport { projectBoardAlgorithm } from './Algorithm/projectBoardAlgorithm';\r\n\r\nclass DashBoard extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.getProjects();\r\n    }\r\n\r\n    render(){ \r\n        const { projects } = this.props.project   \r\n\r\n        let boardContent;\r\n        boardContent = projectBoardAlgorithm(projects);\r\n        \r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">Projects</h1>\r\n                            <br />\r\n                            <CreateProjectButton />\r\n                            <br />\r\n                            <br />                             \r\n                            { boardContent }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nDashBoard.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    project: state.project\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    {getProjects}\r\n    ) (DashBoard); ","import React from 'react'\r\nimport ProjectItem from '../Project/ProjectItem'\r\n\r\nexport const projectBoardAlgorithm = (projects) => {\r\n    \r\n    if (projects.length < 1) {\r\n        return(\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                No Project on this board\r\n            </div>\r\n        )        \r\n    }\r\n    return(      \r\n        <div>\r\n            {projects.map(project =>(\r\n                <ProjectItem key ={project.id} project={project} /> \r\n            ))}\r\n        </div>        \r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst setToken = token =>{\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    }\r\n    else{\r\n        delete axios.defaults.headers.common[\"Authorization\"]\r\n    }\r\n}\r\n\r\nexport default setToken;","import axios from 'axios'\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types'\r\nimport setToken from '../securityUtils/setToken'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch =>{\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser)\r\n        history.push(\"/login\")\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:{}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:error.response.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const loginUser = LoginRequest => async dispatch=>{\r\n    try {\r\n        const response = await axios.post(\"/api/users/login\", LoginRequest);\r\n        const {token} = response.data;\r\n        localStorage.setItem(\"token\", token)\r\n        setToken(token)\r\n        const decodedToken = jwt_decode(token)\r\n\r\n        dispatch({\r\n            type:SET_CURRENT_USER,\r\n            payload:decodedToken\r\n        })        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch =>{\r\n    localStorage.removeItem(\"token\")\r\n    setToken(false)\r\n    dispatch({\r\n        type:SET_CURRENT_USER,\r\n        payload:{}\r\n    })\r\n}","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { logout } from '../../actions/securityActions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Header extends Component{\r\n    \r\n    logout(){\r\n        this.props.logout()\r\n        window.location.href =\"/\"\r\n    }\r\n\r\n    render(){ \r\n        const{ validToken, user } = this.props.security\r\n        \r\n        const guestUser = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/register\">\r\n                            Sign Up\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/login\">\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>  \r\n        )\r\n\r\n        const userIsAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            Dashbord\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">  \r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            <i className=\"fa fa-user-circle mr-1\" />{user.fullName}\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\r\n                            Logout\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>  \r\n        )\r\n        \r\n        let headerLinks;\r\n        if (validToken && user) {\r\n            headerLinks = userIsAuthenticated\r\n        }else {\r\n            headerLinks = guestUser\r\n        }\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-secondary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Project Management Application\r\n                    </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggler=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    { headerLinks }                                \r\n                </div>\r\n            </nav>            \r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes ={\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {logout}\r\n    )(Header); ","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../actions/projectActions';\r\nimport classnames from 'classnames';\r\n\r\nclass AddProject extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            projectName : \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e){        \r\n        e.preventDefault();\r\n        const newProject = {\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            startDate: this.state.start_date,\r\n            endDate: this.state.end_date\r\n        }\r\n\r\n        this.props.createProject(newProject, this.props.history)\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Create Project Form</h5>\r\n                            <br />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control\", {\r\n                                            \"is-invalid\":errors.projectName\r\n                                        })}\r\n                                        placeholder=\"Project Name\"\r\n                                        name=\"projectName\"\r\n                                        value={this.state.projectName}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.projectName && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.projectName}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                     <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control\", {\r\n                                            \"is-invalid\":errors.projectIdentifier\r\n                                        })}\r\n                                        placeholder=\"Project Identifier\"\r\n                                        name=\"projectIdentifier\"\r\n                                        value={this.state.projectIdentifier}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.projectIdentifier && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.projectIdentifier}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className={classnames(\"form-control\", {\r\n                                            \"is-invalid\":errors.description\r\n                                        })}\r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange}\r\n                                    ></textarea>\r\n                                    {errors.description && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.description}</div>\r\n                                    )}\r\n                                </div>\r\n                                <h6 className=\"text-left\">Start Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        value={this.state.start_date}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <h6 className=\"text-left\">Estimated End Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        value={this.state.end_date}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-lg btn-block btn-outline-success mt-4\"\r\n                                    />\r\n                                    <Link to=\"/dashboard\" className=\"btn btn-lg btn-outline-danger btn-block mt-4\">Cancel</Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProject.propTypes ={\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    {  createProject }\r\n    ) (AddProject);\r\n","import {GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state=initialState, action){\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    project_tasks : [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function (state=initialState, action) {\r\n    switch (action.type) {\r\n        case GET_BACKLOG:\r\n            return{\r\n                ...state,\r\n                project_tasks: action.payload\r\n            };\r\n\r\n        case GET_PROJECT_TASK:\r\n            return{\r\n                ...state,\r\n                project_task: action.payload\r\n            }\r\n\r\n        case DELETE_PROJECT_TASK:\r\n            return{\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(project_task =>(\r\n                    project_task.projectSequence !== action.payload\r\n                ))\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_CURRENT_USER} from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    user:{},\r\n    validToken: false\r\n}\r\n\r\nconst booleanActionPayload = payload =>{\r\n    if (payload) {\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken:booleanActionPayload(action.payload),\r\n                user:action.payload\r\n            }\r\n        default:\r\n            return state    \r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport securityReducer from './securityReducer';\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n}) ","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && \r\nwindow.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools \r\n        )\r\n    )\r\n}\r\nelse{\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware))\r\n    )\r\n}\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { getProject, createProject } from '../../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n\r\n        const {\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        } = nextProps.project\r\n\r\n        this.setState({\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { id } =this.props.match.params\r\n        this.props.getProject(id, this.props.history)\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name] : e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n\r\n        const UpdateProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,            \r\n            description: this.state.description,           \r\n            start_date: this.state.start_date,            \r\n            end_date: this.state.end_date\r\n        }\r\n\r\n        this.props.createProject(UpdateProject, this.props.history)\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Update Project Form</h5>\r\n                            <br />\r\n                            <form onSubmit = {this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control\", {\r\n                                            \"is-invalid\":errors.projectName\r\n                                        })}\r\n                                        placeholder=\"Project Name\" \r\n                                        name=\"projectName\"\r\n                                        value={this.state.projectName}\r\n                                        onChange={this.onChange}\r\n                                    />                                    \r\n                                    {errors.projectName && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.projectName}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Project Identifier\"\r\n                                        name=\"projectIdentifier\"\r\n                                        disabled\r\n                                        value={this.state.projectIdentifier}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className={classnames(\"form-control\", {\r\n                                            \"is-invalid\":errors.description\r\n                                        })}\r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange}\r\n                                    ></textarea>\r\n                                    {errors.description && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.description}</div>\r\n                                    )}\r\n                                </div>\r\n                                <h6 className=\"text-left\">Start Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        value={this.state.start_date}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <h6 className=\"text-left\">Estimated End Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        value={this.state.end_date}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-lg btn-block btn-outline-success mt-4\"\r\n                                    />\r\n                                    <Link to=\"/dashboard\" className=\"btn btn-lg btn-outline-danger btn-block mt-4\">Cancel</Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nUpdateProject.propTypes = {\r\n   getProject: PropTypes.func.isRequired,\r\n   createProject: PropTypes.func.isRequired, \r\n   project:PropTypes.object.isRequired,\r\n   errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps =state =>({\r\n    project:state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getProject, createProject}\r\n    ) (UpdateProject)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {deleteProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n\r\n    onDeleteClick(backlog_id, pt_sequence){\r\n        this.props.deleteProjectTask(backlog_id, pt_sequence)\r\n    }\r\n    render() {\r\n        const { project_task } = this.props\r\n        let priorityString;\r\n        let priorityClass;\r\n\r\n        if (project_task.priority === 1) {\r\n            priorityClass =\"bg-danger text-light\"\r\n            priorityString = \"HIGH\"\r\n        }\r\n        else if (project_task.priority === 2) {\r\n            priorityClass =\"bg-warning text-light\"\r\n            priorityString = \"MEDIUM\"\r\n        }\r\n        else{\r\n            priorityClass =\"bg-info text-light\"\r\n            priorityString = \"LOW\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"card mb-1 bg-light\">\r\n                <div className={`card-header text-primary ${priorityClass}`}>\r\n                    ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">\r\n                        {project_task.summary}\r\n                    </h5>\r\n                    <p className=\"card-text text-truncate\">\r\n                        {project_task.acceptanceCriteria}\r\n                    </p>\r\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-outline-primary mr-3\">View / Update</Link>\r\n                    <button onClick={this.onDeleteClick.bind(\r\n                            this,\r\n                            project_task.projectIdentifier,\r\n                            project_task.projectSequence\r\n                        )} \r\n                        className=\"btn btn-outline-danger\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nProjectTask.propTypes ={\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProjectTask})(ProjectTask);\r\n","import axios from 'axios';\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from './types';\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n    try {        \r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`) \r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload:{}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n    try {        \r\n        const response = await axios.get(`/api/backlog/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: response.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProjectTask = (backlog_id, pt_sequence, history) => async dispatch =>{\r\n    try {\r\n        const response = await axios.get(`/api/backlog/${backlog_id}/${pt_sequence}`)\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: response.data\r\n        })\r\n    } catch (error) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n}\r\n\r\nexport const updateProjectTask = (backlog_id, pt_sequence, project_task, history)=>async dispatch=>{\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_sequence}`, project_task)\r\n        history.push( `/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:{}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:error.response.data\r\n        }) \r\n    }\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_sequence) =>async dispatch=>{\r\n    if (window.confirm(`You are deleting project task ${pt_sequence}, this action cannot be undone`)) {\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_sequence}`)\r\n        dispatch({\r\n            type:DELETE_PROJECT_TASK,\r\n            payload:pt_sequence\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTask/ProjectTask'\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n        const { project_tasks_prop } =  this.props\r\n\r\n        const tasks = project_tasks_prop.map(project_task => (\r\n            <ProjectTask key={project_task.id} project_task={project_task} />\r\n        )) \r\n\r\n        let todoItems = []\r\n        let inProgressItems = []\r\n        let doneItems = []\r\n\r\n        for (let i = 0; i < tasks.length; i++) {\r\n            if (tasks[i].props.project_task.status === \"TO_DO\") {             \r\n                todoItems.push(tasks[i]) \r\n            }\r\n            else if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n                inProgressItems.push(tasks[i]) \r\n            }\r\n            else{\r\n                doneItems.push(tasks[i])\r\n            }            \r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                <h3>TODO</h3>\r\n                            </div>                                                      \r\n                        </div> \r\n                        { todoItems }                                     \r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                                <h3>In Progress</h3>\r\n                            </div>                    \r\n                        </div>                          \r\n                        { inProgressItems }                              \r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-success text-white\">\r\n                                <h3>Done</h3>\r\n                            </div>                                                           \r\n                        </div>                          \r\n                        { doneItems }                              \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Backlog\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\"\r\nimport { projectTaskBoardAlgorithm } from '../Algorithm/projectTasksBoardAlgorithm';\r\n\r\nclass ProjectBoard extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            errors:{}\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        this.props.getBacklog(id)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const { project_tasks } = this.props.backlog; \r\n        const { errors } = this.state\r\n\r\n        let boardContent;\r\n        boardContent = projectTaskBoardAlgorithm(errors, project_tasks)\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-outline-info mb-3\">\r\n                    <i className=\"fa fa-plus-circle\"> Create Project Task</i>\r\n                </Link>\r\n                <br/>   \r\n                {boardContent}         \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes ={\r\n    backlog:PropTypes.object.isRequired,\r\n    getBacklog:PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    backlog:state.backlog,\r\n    errors:state.errors\r\n})\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getBacklog}\r\n    )(ProjectBoard);\r\n","import React from 'react';\r\nimport Backlog from \"../ProjectBoard/Backlog\"\r\n\r\nexport const projectTaskBoardAlgorithm = (errors, project_tasks) =>{\r\n    if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n            return(\r\n                <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                {errors.projectNotFound}\r\n                </div>\r\n            )\r\n        }\r\n        else if (errors.projectIdentifier) {\r\n            return(\r\n                <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                {errors.projectIdentifier}\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                    No Project Tasks on this board\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return <Backlog project_tasks_prop={project_tasks}/> \r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { addProjectTask } from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddProjectTask extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        const { id } = this.props.match.params\r\n\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority:0,\r\n            dueDate:\"\",\r\n            projectIdentifier : id,\r\n            errors:{}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        const newProjectTask = {\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate\r\n        }\r\n\r\n        this.props.addProjectTask(this.state.projectIdentifier, newProjectTask, this.props.history) \r\n    }\r\n\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"add-projectTask\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">Back to project Board</Link>\r\n                            <h6 className=\"display-4 text-center\">Add Project Task</h6>\r\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\":errors.summary\r\n                                        })} \r\n                                        name=\"summary\" \r\n                                        placeholder=\"Project Task summary\" \r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.summary}</div>\r\n                                    )}                                    \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea \r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        value={this.state.acceptanceCriteria} \r\n                                        onChange={this.onChange}\r\n                                    />                                    \r\n                                </div>\r\n                                <h6 className=\"text-left\">Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\" \r\n                                        className=\"form-control form-control-lg\"  \r\n                                        name=\"dueDate\"                                        \r\n                                        value={this.state.dueDate} \r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"priority\"               \r\n                                        value={this.state.priority} \r\n                                        onChange={this.onChange} \r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"status\"                            \r\n                                        value={this.state.status}   \r\n                                        onChange={this.onChange}                                     \r\n                                    >\r\n                                        <option value=\"\">Select status</option>\r\n                                        <option value=\"TO_DO\">TODO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-outline-secondary btn-lg btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    errors: state.errors\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    {addProjectTask}\r\n    )(AddProjectTask);  \r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\"\r\n\r\nclass UpdateProjectTask extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            id:\"\",\r\n            projectSequence:\"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority:0,\r\n            dueDate:\"\",\r\n            projectIdentifier :\"\",\r\n            createdAt:\"\",\r\n            errors:{}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n    \r\n    componentDidMount(){\r\n        const { backlog_id, pt_sequence } = this.props.match.params\r\n        this.props.getProjectTask(backlog_id, pt_sequence, this.props.history)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n        \r\n        const {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            createdAt\r\n        } = nextProps.project_task\r\n\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,            \r\n            createdAt\r\n        })\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        const updateProjectTask = {            \r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,            \r\n            projectIdentifier: this.state.projectIdentifier,            \r\n            createdAt: this.state.createdAt\r\n\r\n        }\r\n\r\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, updateProjectTask, this.props.history) \r\n    }\r\n    render() {        \r\n        const { errors } = this.state\r\n        return (\r\n            <div className=\"add-projectTask\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">Back to project Board</Link>\r\n                            <h6 className=\"display-4 text-center\">Update Project Task</h6>\r\n                            <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} + \r\n                            Project Task ID: {this.state.projectSequence}</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\":errors.summary\r\n                                        })} \r\n                                        name=\"summary\" \r\n                                        placeholder=\"Project Task summary\" \r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.summary}</div>\r\n                                    )}                                    \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea \r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        value={this.state.acceptanceCriteria} \r\n                                        onChange={this.onChange}\r\n                                    />                                    \r\n                                </div>\r\n                                <h6 className=\"text-left\">Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\" \r\n                                        className=\"form-control form-control-lg\"  \r\n                                        name=\"dueDate\"                                        \r\n                                        value={this.state.dueDate} \r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"priority\"               \r\n                                        value={this.state.priority} \r\n                                        onChange={this.onChange} \r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"status\"                            \r\n                                        value={this.state.status}   \r\n                                        onChange={this.onChange}                                     \r\n                                    >\r\n                                        <option value=\"\">Select status</option>\r\n                                        <option value=\"TO_DO\">TODO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-outline-secondary btn-lg btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    {getProjectTask, updateProjectTask}\r\n    )(UpdateProjectTask);","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Landing extends Component {\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        } \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Project Management Application</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start your own\r\n                                </p>\r\n                                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">Sign Up</Link>\r\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">Login</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    security : state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React, { Component } from 'react'\r\nimport { createNewUser } from '../../actions/securityActions'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { connect } from 'react-redux'\r\n\r\nclass SignUp extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state ={\r\n            \"username\":\"\",\r\n            \"password\":\"\",\r\n            \"confirmPassword\":\"\",\r\n            \"fullName\":\"\",\r\n            errors:{} \r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        } \r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        const newUser = {\r\n            username:this.state.username,\r\n            password:this.state.password,\r\n            confirmPassword:this.state.confirmPassword,\r\n            fullName:this.state.fullName\r\n        }\r\n\r\n        this.props.createNewUser(newUser, this.props.history)\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create Your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control\", {\r\n                                            \"is-invalid\":errors.fullName\r\n                                        })} \r\n                                        placeholder=\"Full Name\" \r\n                                        name=\"fullName\"\r\n                                        value={this.state.fullName}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.fullName && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.fullName}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"email\" \r\n                                        className={classnames(\"form-control\", {\r\n                                            \"is-invalid\":errors.username\r\n                                        })} \r\n                                        placeholder=\"Email Address\" \r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.username}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control\", {\r\n                                            \"is-invalid\":errors.password\r\n                                        })} \r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.password}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control\", {\r\n                                            \"is-invalid\":errors.confirmPassword\r\n                                        })} \r\n                                        placeholder=\"Confirm Password\" \r\n                                        name=\"confirmPassword\"\r\n                                        value={this.state.confirmPassword}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.confirmPassword && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.confirmPassword}</div>\r\n                                    )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-outline-info btn-lg btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSignUp.propTypes ={\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { createNewUser }\r\n    )(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport { loginUser } from '../../actions/securityActions'\r\nimport classnames from 'classnames'\r\n\r\nclass Login extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state ={\r\n            \"username\":\"\",\r\n            \"password\": \"\",\r\n            errors:{}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        } \r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n        if(nextProps.errors){\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        const LoginRequest ={\r\n            username:this.state.username,\r\n            password:this.state.password\r\n        }\r\n\r\n        this.props.loginUser(LoginRequest)\r\n    }    \r\n\r\n    render() {\r\n        const{ errors } = this.state\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"email\" \r\n                                        className={classnames (\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })} \r\n                                        placeholder=\"Email Address\" \r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.username}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames (\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}\r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\"                                        \r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback text-left\">{errors.password}</div>\r\n                                    )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-outline-info btn-lg btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes ={\r\n    loginUser:PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired,\r\n    security:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    security:state.security,\r\n    errors:state.errors\r\n})\r\nexport default connect(\r\n    mapStateToProps, \r\n    {loginUser}\r\n    )(Login) \r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SecureRoute = ({component:Component, security, ...otherProps}) =>(\r\n    <Route \r\n        {...otherProps}\r\n        render = {props => \r\n            security.validToken === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n    />\r\n)\r\n\r\nSecureRoute.propTypes ={\r\n    security:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(SecureRoute)\r\n\r\n","import React from 'react';\nimport './App.css';\nimport DashBoard from './components/Dashboard';\nimport Header from './components/Layout/Header'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddProject from './components/Project/AddProject';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTask/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTask/UpdateProjectTask';\nimport Landing from './components/Layout/Landing'\nimport SignUp from './components/UserManagement/SignUp';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from 'jwt-decode'\nimport setToken from './securityUtils/setToken';\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/securityActions'\nimport SecureRoute from './securityUtils/SecureRoute'\n\nconst token = localStorage.getItem(\"token\")\nif (token) {\n  setToken(token)\n  const decodedToken = jwt_decode(token)\n\n  store.dispatch({\n    type:SET_CURRENT_USER,\n    payload:decodedToken\n  })\n\n  const currentTime =  Date.now() / 1000\n  if (decodedToken.exp < currentTime) {\n    store.dispatch(logout())\n    window.location.href = \"/\"\n  }\n\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            // Public Routes\n          }\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={SignUp} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {\n            // Private Routes\n          }\n          <Switch>\n            <SecureRoute exact path=\"/dashboard\" component={DashBoard} />\n            <SecureRoute exact path=\"/addProject\" component={AddProject} />\n            <SecureRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n            <SecureRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n            <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:pt_sequence\" component={UpdateProjectTask} />  \n          </Switch>\n          </div>\n      </Router>\n    </Provider>\n  );\n} \n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}